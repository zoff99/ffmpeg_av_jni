name: windows JNI Lib

on:
  push:
    paths-ignore:
     - 'README.md'
     - 'CHANGELOG.md'
  pull_request:
    paths-ignore:
     - 'README.md'
     - 'CHANGELOG.md'
  workflow_dispatch:
    inputs:
      version:
        description: dummy
        default: dummy

jobs:

  build-windows-nightly-artifact:
    name: Nightly Artifact windows Build
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5

      - name: install deps
        run: |
          sudo apt-get update && \
          sudo DEBIAN_FRONTEND=noninteractive \
          apt-get install -y --no-install-recommends \
          ca-certificates \
          yasm nasm \
          make curl wget git nano vim \
          openjdk-17-jdk \
          openjdk-17-jdk-headless \
          coreutils autoconf libtool pkg-config \
          gcc g++ binutils \
          gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 \
          mingw-w64-tools pkg-config-mingw-w64-x86-64 win-iconv-mingw-w64-dev \
          mingw-w64-x86-64-dev

      - name: build deps
        run:  |
          ls -al
          id
          pwd
          cd .localrun/
          ./docker_it_win.sh build

      - name: build jni lib
        run:  |
          ls -al
          id
          pwd
          cd .localrun/
          ./docker_it_win.sh

      - name: copy artefact
        run:  |
          pwd
          cd .localrun/
          find . -name 'ffmpeg_av_jni.dll'
          find . -name 'test.exe'

      - name: Upload artifact
        uses: actions/upload-artifact@v5
        with:
          name: ffmpeg_av_jni.dll
          path: ffmpeg_av_jni.dll
      - name: Upload to nightly release
        uses: ncipollo/release-action@v1
        if: github.ref == 'refs/heads/master'
        with:
          allowUpdates: true
          tag: nightly
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: true
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "ffmpeg_av_jni.dll,test.exe"

